{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/localstorage.service\";\nexport class AouthService {\n  constructor(localStorage) {\n    this.localStorage = localStorage;\n  }\n  emailExist(email) {\n    let email_exist = false;\n    const users = this.localStorage.select('users');\n    if (users) {\n      for (let i = 0; i < users.length; i++) {\n        const current_user = users[i];\n        if (current_user.email == email) {\n          email_exist = true;\n          break;\n        }\n      }\n    }\n    return email_exist ? 'Email already exist !!!' : null;\n  }\n  getCurrentDate() {\n    const date = new Date();\n    const created_at = date.getUTCFullYear() + '-' + ('00' + (date.getUTCMonth() + 1)).slice(-2) + '-' + ('00' + date.getUTCDate()).slice(-2) + ' ' + ('00' + date.getUTCHours()).slice(-2) + ':' + ('00' + date.getUTCMinutes()).slice(-2) + ':' + ('00' + date.getUTCSeconds()).slice(-2);\n    return created_at;\n  }\n  register(user) {\n    const checkEmail = this.emailExist(user.email);\n    if (checkEmail) {\n      return {\n        error: true,\n        message: checkEmail\n      };\n    }\n    let users = this.localStorage.select('users') ?? [];\n    user['id'] = Date.now();\n    user['created_at'] = this.getCurrentDate();\n    delete user.confirm_password;\n    users.push(user);\n    console.log(users);\n    this.localStorage.insert('users', users);\n    return {\n      error: false,\n      message: 'User create successfuly !!!',\n      data: user\n    };\n  }\n  login(email, password) {\n    const users = this.localStorage.select('users');\n    let login_user = null;\n    if (users) {\n      for (let i = 0; i < users.length; i++) {\n        const user = users[i];\n        if (user.email == email && user.password == password) {\n          login_user = user;\n          break;\n        }\n      }\n    }\n    if (login_user) {\n      this.localStorage.insert('auth', login_user);\n      return {\n        error: false,\n        message: 'User login successfully !!!',\n        data: login_user\n      };\n    }\n    return {\n      error: true,\n      message: 'Invalid credentials'\n    };\n  }\n  auth() {\n    const user = this.localStorage.select('auth');\n    if (user) {\n      return {\n        error: false,\n        message: 'User authenticate',\n        data: user\n      };\n    }\n    return {\n      error: true,\n      message: 'User not authenticate'\n    };\n  }\n}\n_class = AouthService;\n_class.ɵfac = function AouthService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.LocalstorageService));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AouthService","constructor","localStorage","emailExist","email","email_exist","users","select","i","length","current_user","getCurrentDate","date","Date","created_at","getUTCFullYear","getUTCMonth","slice","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","register","user","checkEmail","error","message","now","confirm_password","push","console","log","insert","data","login","password","login_user","auth","i0","ɵɵinject","i1","LocalstorageService","factory","ɵfac","providedIn"],"sources":["/home/feyem/Bureau/devoirs/devoirs/src/app/Aouth/aouth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { UserInterface } from './interfaces/user.interface';\nimport { LocalstorageService } from '../services/localstorage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AouthService {\n\n  constructor(\n    private localStorage: LocalstorageService\n  ) { }\n\n  private emailExist(email: string): string | null {\n\n    let email_exist: boolean = false;\n    const users: Array<UserInterface> = this.localStorage.select('users');\n    if (users) {\n\n      for (let i = 0; i < users.length; i++) {\n        const current_user = users[i];\n        if (current_user.email == email) {\n  \n          email_exist = true;\n          break;\n        }\n      }\n    }\n\n    return email_exist ? 'Email already exist !!!' : null;\n  }\n\n  private getCurrentDate (): string {\n\n    const date = new Date();\n    const created_at = date.getUTCFullYear() + '-' +\n      ('00' + (date.getUTCMonth()+1)).slice(-2) + '-' +\n      ('00' + date.getUTCDate()).slice(-2) + ' ' + \n      ('00' + date.getUTCHours()).slice(-2) + ':' + \n      ('00' + date.getUTCMinutes()).slice(-2) + ':' + \n      ('00' + date.getUTCSeconds()).slice(-2);\n\n    return created_at;\n  }\n\n  register (user: any) {\n\n    const checkEmail = this.emailExist(user.email);\n    if (checkEmail) {\n\n      return {\n        error: true,\n        message: checkEmail\n      }\n    }\n\n    let users: Array<UserInterface> = this.localStorage.select('users') ?? [];\n    user['id'] = Date.now();\n    user['created_at'] = this.getCurrentDate();\n    delete user.confirm_password;\n    users.push(user);\n\n    console.log(users)\n    this.localStorage.insert('users', users);\n\n    return {\n      error: false,\n      message: 'User create successfuly !!!',\n      data: user\n    }\n  }\n\n  login (email: string, password: string) {\n\n    const users: Array<UserInterface> = this.localStorage.select('users');\n    let login_user: UserInterface | null = null;\n    if (users) {\n\n      for (let i = 0; i < users.length; i++) {\n\n        const user = users[i];\n        if (user.email == email && user.password == password) {\n      \n          login_user = user;\n          break\n        }\n      }\n    }\n\n    if (login_user) {\n\n      this.localStorage.insert('auth', login_user);\n      return {\n        error: false,\n        message: 'User login successfully !!!',\n        data: login_user\n      }\n    }\n\n    return {\n      error: true,\n      message: 'Invalid credentials'\n    }\n  }\n\n  auth () {\n\n    const user: any = this.localStorage.select('auth');\n    if (user) {\n\n      return {\n        error: false,\n        message: 'User authenticate',\n        data: user\n      }\n    }\n\n    return {\n      error: true,\n      message: 'User not authenticate'\n    }\n  }\n}\n"],"mappings":";;;AAOA,OAAM,MAAOA,YAAY;EAEvBC,YACUC,YAAiC;IAAjC,KAAAA,YAAY,GAAZA,YAAY;EAClB;EAEIC,UAAUA,CAACC,KAAa;IAE9B,IAAIC,WAAW,GAAY,KAAK;IAChC,MAAMC,KAAK,GAAyB,IAAI,CAACJ,YAAY,CAACK,MAAM,CAAC,OAAO,CAAC;IACrE,IAAID,KAAK,EAAE;MAET,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,KAAK,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;QACrC,MAAME,YAAY,GAAGJ,KAAK,CAACE,CAAC,CAAC;QAC7B,IAAIE,YAAY,CAACN,KAAK,IAAIA,KAAK,EAAE;UAE/BC,WAAW,GAAG,IAAI;UAClB;;;;IAKN,OAAOA,WAAW,GAAG,yBAAyB,GAAG,IAAI;EACvD;EAEQM,cAAcA,CAAA;IAEpB,MAAMC,IAAI,GAAG,IAAIC,IAAI,EAAE;IACvB,MAAMC,UAAU,GAAGF,IAAI,CAACG,cAAc,EAAE,GAAG,GAAG,GAC5C,CAAC,IAAI,IAAIH,IAAI,CAACI,WAAW,EAAE,GAAC,CAAC,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAC/C,CAAC,IAAI,GAAGL,IAAI,CAACM,UAAU,EAAE,EAAED,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAC1C,CAAC,IAAI,GAAGL,IAAI,CAACO,WAAW,EAAE,EAAEF,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAC3C,CAAC,IAAI,GAAGL,IAAI,CAACQ,aAAa,EAAE,EAAEH,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAC7C,CAAC,IAAI,GAAGL,IAAI,CAACS,aAAa,EAAE,EAAEJ,KAAK,CAAC,CAAC,CAAC,CAAC;IAEzC,OAAOH,UAAU;EACnB;EAEAQ,QAAQA,CAAEC,IAAS;IAEjB,MAAMC,UAAU,GAAG,IAAI,CAACrB,UAAU,CAACoB,IAAI,CAACnB,KAAK,CAAC;IAC9C,IAAIoB,UAAU,EAAE;MAEd,OAAO;QACLC,KAAK,EAAE,IAAI;QACXC,OAAO,EAAEF;OACV;;IAGH,IAAIlB,KAAK,GAAyB,IAAI,CAACJ,YAAY,CAACK,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE;IACzEgB,IAAI,CAAC,IAAI,CAAC,GAAGV,IAAI,CAACc,GAAG,EAAE;IACvBJ,IAAI,CAAC,YAAY,CAAC,GAAG,IAAI,CAACZ,cAAc,EAAE;IAC1C,OAAOY,IAAI,CAACK,gBAAgB;IAC5BtB,KAAK,CAACuB,IAAI,CAACN,IAAI,CAAC;IAEhBO,OAAO,CAACC,GAAG,CAACzB,KAAK,CAAC;IAClB,IAAI,CAACJ,YAAY,CAAC8B,MAAM,CAAC,OAAO,EAAE1B,KAAK,CAAC;IAExC,OAAO;MACLmB,KAAK,EAAE,KAAK;MACZC,OAAO,EAAE,6BAA6B;MACtCO,IAAI,EAAEV;KACP;EACH;EAEAW,KAAKA,CAAE9B,KAAa,EAAE+B,QAAgB;IAEpC,MAAM7B,KAAK,GAAyB,IAAI,CAACJ,YAAY,CAACK,MAAM,CAAC,OAAO,CAAC;IACrE,IAAI6B,UAAU,GAAyB,IAAI;IAC3C,IAAI9B,KAAK,EAAE;MAET,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,KAAK,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;QAErC,MAAMe,IAAI,GAAGjB,KAAK,CAACE,CAAC,CAAC;QACrB,IAAIe,IAAI,CAACnB,KAAK,IAAIA,KAAK,IAAImB,IAAI,CAACY,QAAQ,IAAIA,QAAQ,EAAE;UAEpDC,UAAU,GAAGb,IAAI;UACjB;;;;IAKN,IAAIa,UAAU,EAAE;MAEd,IAAI,CAAClC,YAAY,CAAC8B,MAAM,CAAC,MAAM,EAAEI,UAAU,CAAC;MAC5C,OAAO;QACLX,KAAK,EAAE,KAAK;QACZC,OAAO,EAAE,6BAA6B;QACtCO,IAAI,EAAEG;OACP;;IAGH,OAAO;MACLX,KAAK,EAAE,IAAI;MACXC,OAAO,EAAE;KACV;EACH;EAEAW,IAAIA,CAAA;IAEF,MAAMd,IAAI,GAAQ,IAAI,CAACrB,YAAY,CAACK,MAAM,CAAC,MAAM,CAAC;IAClD,IAAIgB,IAAI,EAAE;MAER,OAAO;QACLE,KAAK,EAAE,KAAK;QACZC,OAAO,EAAE,mBAAmB;QAC5BO,IAAI,EAAEV;OACP;;IAGH,OAAO;MACLE,KAAK,EAAE,IAAI;MACXC,OAAO,EAAE;KACV;EACH;;SAlHW1B,YAAY;;mBAAZA,MAAY,EAAAsC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,mBAAA;AAAA;;SAAZzC,MAAY;EAAA0C,OAAA,EAAZ1C,MAAY,CAAA2C,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}