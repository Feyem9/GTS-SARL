{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nexport class LocalstorageService {\n  insert(key, data) {\n    const convert_to_string = JSON.stringify(data);\n    localStorage.setItem(key, convert_to_string);\n  }\n  select(key) {\n    const content = localStorage.getItem(key);\n    if (content) {\n      const convert_to_json = JSON.parse(content);\n      return convert_to_json;\n    }\n    return content;\n  }\n}\n_class = LocalstorageService;\n_class.ɵfac = function LocalstorageService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["LocalstorageService","insert","key","data","convert_to_string","JSON","stringify","localStorage","setItem","select","content","getItem","convert_to_json","parse","factory","ɵfac","providedIn"],"sources":["/home/feyem/Bureau/devoirs/devoirs/src/app/services/localstorage.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalstorageService {\n\n  insert(key: string, data: any): void {\n\n    const convert_to_string = JSON.stringify(data);\n    localStorage.setItem(key, convert_to_string);\n  }\n\n  select(key: string): any {\n    \n    const content = localStorage.getItem(key);\n    if (content) {\n\n      const convert_to_json = JSON.parse(content);\n      return convert_to_json;\n    }\n    return content;\n  }\n\n  // save(one:string,two:string,three:string,saved:any):void{\n\n  // }\n}\n"],"mappings":";;AAKA,OAAM,MAAOA,mBAAmB;EAE9BC,MAAMA,CAACC,GAAW,EAAEC,IAAS;IAE3B,MAAMC,iBAAiB,GAAGC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC;IAC9CI,YAAY,CAACC,OAAO,CAACN,GAAG,EAAEE,iBAAiB,CAAC;EAC9C;EAEAK,MAAMA,CAACP,GAAW;IAEhB,MAAMQ,OAAO,GAAGH,YAAY,CAACI,OAAO,CAACT,GAAG,CAAC;IACzC,IAAIQ,OAAO,EAAE;MAEX,MAAME,eAAe,GAAGP,IAAI,CAACQ,KAAK,CAACH,OAAO,CAAC;MAC3C,OAAOE,eAAe;;IAExB,OAAOF,OAAO;EAChB;;SAjBWV,mBAAmB;;mBAAnBA,MAAmB;AAAA;;SAAnBA,MAAmB;EAAAc,OAAA,EAAnBd,MAAmB,CAAAe,IAAA;EAAAC,UAAA,EAFlB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}